# AI Karen â€“ Backend .env example

# --- Core server settings ---
# Optional: override backend base URL used by the Next.js proxy
# KAREN_BACKEND_URL=http://127.0.0.1:8000

# --- Authentication / dev flags ---
# Enable a development-only login bypass when the DB is not ready.
# If enabled, /api/auth/login will fall back to issuing a dev token on failure,
# and /api/auth/dev-login will be available. DO NOT USE IN PRODUCTION.
AUTH_DEV_MODE=false
AUTH_ALLOW_DEV_LOGIN=false

# Object storage (MinIO) for Milvus
# Default local credentials. Change for real deployments.
MINIO_ACCESS_KEY=ai-karen-minio
MINIO_SECRET_KEY=ai-karen-minio-secret
MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}

# JWT secret used for access/refresh tokens.
# Change this in production.
AUTH_SECRET_KEY=change-me-in-production

# --- Database (PostgreSQL via asyncpg) ---
# Primary connection string. If you use a non-async driver (postgresql://),
# the backend will auto-upgrade it to asyncpg at runtime.
AUTH_DATABASE_URL=postgresql+asyncpg://karen_user:karen_secure_pass_change_me@localhost:5432/ai_karen

# Optional legacy keys (either can be used instead of AUTH_DATABASE_URL)
# POSTGRES_URL=postgresql+asyncpg://user:pass@localhost:5432/ai_karen
# DATABASE_URL=postgresql+asyncpg://user:pass@localhost:5432/ai_karen

# SQLAlchemy async engine tuning
AUTH_DB_POOL_SIZE=10
AUTH_DB_POOL_MAX_OVERFLOW=20
AUTH_DB_CONNECTION_TIMEOUT=30
AUTH_DB_QUERY_TIMEOUT=30
AUTH_DB_ENABLE_QUERY_LOGGING=false

# --- Enhanced Database Configuration (Requirements 4.3, 4.4) ---
# Database connection timeout (increased from 15s to 45s for database operations)
DB_CONNECTION_TIMEOUT=45
# Database query timeout
DB_QUERY_TIMEOUT=30
# Connection pool size
DB_POOL_SIZE=10
# Maximum pool overflow connections
DB_MAX_OVERFLOW=20
# Connection pool recycle time (seconds)
DB_POOL_RECYCLE=3600
# Enable connection pre-ping for health checks
DB_POOL_PRE_PING=true
# Pool timeout for getting connections
DB_POOL_TIMEOUT=30
# Enable SQL query echo for debugging
DB_ECHO=false

# Database Health Monitoring
DB_HEALTH_CHECK_INTERVAL=30
DB_MAX_CONNECTION_FAILURES=5
DB_CONNECTION_RETRY_DELAY=5

# Graceful Shutdown Configuration
SHUTDOWN_TIMEOUT=30
ENABLE_GRACEFUL_SHUTDOWN=true

# --- Session / Cookie settings ---
# In local dev over http, set cookie_secure=false to allow cookies.
AUTH_SESSION_COOKIE_SECURE=false
AUTH_SESSION_COOKIE_HTTPONLY=true
AUTH_SESSION_COOKIE_SAMESITE=lax
AUTH_SESSION_TIMEOUT_HOURS=24

# --- Security toggles (keep conservative in dev) ---
AUTH_ENABLE_SECURITY_FEATURES=false
AUTH_ENABLE_RATE_LIMITING=false
AUTH_ENABLE_SESSION_VALIDATION=false
AUTH_ENABLE_INTELLIGENT_AUTH=false

# --- Providers / model directories ---
# Local model discovery paths
LLAMA_CPP_MODELS_DIR=./models/gguf
TRANSFORMERS_MODELS_DIR=./models/transformers

# Optional spaCy pipelines exposed via /api/public/providers/local/spacy/pipelines
# Example: en_core_web_sm,en_core_web_md
SPACY_PIPELINES=en_core_web_sm

# Cloud API keys (optional)
# OPENAI_API_KEY=
# GEMINI_API_KEY=
# HUGGINGFACE_API_KEY=

# --- Email Service Configuration ---
# Email service provider (smtp, sendgrid, ses, mailgun, postmark)
EMAIL_PROVIDER=smtp
EMAIL_ENABLED=true
EMAIL_TEST_MODE=true

# SMTP Configuration (for EMAIL_PROVIDER=smtp)
SMTP_HOST=localhost
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=
SMTP_PASSWORD=

# API-based providers (for sendgrid, ses, mailgun, postmark)
EMAIL_API_KEY=
EMAIL_API_SECRET=

# Email sender configuration
EMAIL_FROM=noreply@ai-karen.com
EMAIL_FROM_NAME=AI Karen Admin System
EMAIL_REPLY_TO=

# Email queue configuration
EMAIL_MAX_RETRIES=3
EMAIL_RETRY_DELAY=5
EMAIL_BATCH_SIZE=10
EMAIL_RATE_LIMIT=60
EMAIL_PRIORITY_PROCESSING=true

# --- Timeout Configuration (in milliseconds) ---
# Authentication timeout - increased from 15s to 45s for database operations
AUTH_TIMEOUT_MS=45000
# Connection timeout for network requests
CONNECTION_TIMEOUT_MS=30000
# Session validation timeout
SESSION_VALIDATION_TIMEOUT_MS=30000
# Health check timeout
HEALTH_CHECK_TIMEOUT_MS=10000
# Database operation timeout
DATABASE_TIMEOUT_MS=30000

# --- Retry Configuration ---
# Maximum number of retry attempts for failed requests
MAX_RETRY_ATTEMPTS=3
# Base delay between retries (in milliseconds)
RETRY_BASE_DELAY_MS=1000
# Maximum delay between retries (in milliseconds)
RETRY_MAX_DELAY_MS=10000
# Exponential backoff base multiplier
RETRY_EXPONENTIAL_BASE=2
# Enable exponential backoff for retries
ENABLE_EXPONENTIAL_BACKOFF=true

# --- Performance Optimization Configuration ---
# HTTP Connection Pool Settings
HTTP_CONNECTION_POOL_MAX_CONNECTIONS=50
HTTP_CONNECTION_POOL_MAX_PER_HOST=10
HTTP_CONNECTION_POOL_KEEP_ALIVE_TIMEOUT=60000
HTTP_CONNECTION_POOL_MAX_IDLE_TIME=300000
HTTP_CONNECTION_POOL_ENABLE_KEEP_ALIVE=true

# Request/Response Cache Settings
RESPONSE_CACHE_MAX_SIZE=1000
RESPONSE_CACHE_DEFAULT_TTL=300000
RESPONSE_CACHE_MAX_MEMORY_USAGE=52428800
RESPONSE_CACHE_ENABLE_COMPRESSION=true
RESPONSE_CACHE_ENABLE_PERSISTENCE=false

# Database Query Optimization Settings
DB_QUERY_CACHE_ENABLE=true
DB_QUERY_CACHE_TTL=300000
DB_QUERY_CACHE_MAX_SIZE=1000
DB_PREPARED_STATEMENTS_ENABLE=true
DB_SLOW_QUERY_THRESHOLD=1000

# Performance Monitoring
PERFORMANCE_METRICS_ENABLE=true
PERFORMANCE_METRICS_INTERVAL=60000
PERFORMANCE_AUTO_OPTIMIZE=true

# --- Backend Connectivity Configuration ---
# 
# STANDARDIZED ENVIRONMENT VARIABLES (Requirements 1.1, 1.3)
# These variables provide consistent backend connectivity configuration
# across all environments with automatic fallback and high availability support.

# Primary backend URL (server-side requests)
# Used by Next.js API routes and server-side components
# Format: http://hostname:port (no trailing slash)
KAREN_BACKEND_URL=http://localhost:8000

# Primary backend URL (client-side requests) 
# Used by browser-based requests from React components
# Must be accessible from the user's browser
# Format: http://hostname:port (no trailing slash)
NEXT_PUBLIC_KAREN_BACKEND_URL=http://localhost:8000

# Fallback backend URLs (comma-separated)
# Used when primary backend is unavailable
# Automatically includes localhost variations and Docker networking
# Format: http://host1:port,http://host2:port,http://host3:port
KAREN_FALLBACK_BACKEND_URLS=http://127.0.0.1:8000,http://host.docker.internal:8000

# High availability backend URLs for production (comma-separated)
# Additional URLs for production load balancing and failover
# Only used in production environments
# KAREN_HA_BACKEND_URLS=http://backend1.example.com:8000,http://backend2.example.com:8000

# Container-specific backend configuration
# Used when running in Docker containers
KAREN_CONTAINER_BACKEND_HOST=backend
KAREN_CONTAINER_BACKEND_PORT=8000

# External access configuration
# Used when accessing from external networks
# KAREN_EXTERNAL_HOST=your-domain.com
# KAREN_EXTERNAL_BACKEND_PORT=8000

# Backend port (legacy support)
# Defaults to 8000 if not specified
KAREN_BACKEND_PORT=8000

# Health check interval (in milliseconds)
# How often to check backend connectivity
HEALTH_CHECK_INTERVAL_MS=30000

# DEPRECATED VARIABLES (backward compatibility only)
# These variables are deprecated and will be removed in future versions
# Please migrate to the standardized variables above
# 
# API_BASE_URL -> use KAREN_BACKEND_URL instead
# NEXT_PUBLIC_API_BASE_URL -> use NEXT_PUBLIC_KAREN_BACKEND_URL instead
# BACKEND_PORT -> use KAREN_BACKEND_PORT instead

# System configuration
SYSTEM_NAME=AI Karen Admin System
NEXT_PUBLIC_BASE_URL=http://localhost:8000
