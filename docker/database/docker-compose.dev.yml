# Development Environment Configuration
# This extends the base docker-compose.yml with development-specific settings

version: '3.8'

services:
  postgres:
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-ai_karen_dev}
      - POSTGRES_USER=${POSTGRES_USER:-karen_dev}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dev_password_123}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./init/postgres:/docker-entrypoint-initdb.d
      - ./migrations/postgres:/migrations/postgres:ro
    command: >
      postgres
      -c log_statement=all
      -c log_duration=on
      -c log_min_duration_statement=0
      -c shared_preload_libraries=pg_stat_statements
    restart: unless-stopped

  elasticsearch:
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.name=ai-karen-dev
      - node.name=ai-karen-dev-node
    ports:
      - "${ELASTICSEARCH_PORT:-9200}:9200"
      - "9300:9300"  # Expose transport port for debugging
    volumes:
      - elasticsearch_dev_data:/usr/share/elasticsearch/data
    restart: unless-stopped

  milvus:
    environment:
      ETCD_ENDPOINTS: milvus-etcd:2379
      MINIO_ADDRESS: milvus-minio:9000
      MILVUS_CONFIG_PATH: /milvus/configs/milvus_dev.yaml
    ports:
      - "${MILVUS_PORT:-19530}:19530"
      - "9091:9091"  # Expose metrics port
    volumes:
      - milvus_dev_data:/var/lib/milvus
      - ./config/milvus_dev.yaml:/milvus/configs/milvus_dev.yaml:ro
    restart: unless-stopped

  redis:
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD:-dev_redis_123}
      --maxmemory 256m
      --maxmemory-policy allkeys-lru
      --save 60 1000
      --loglevel debug
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_dev_data:/data
    restart: unless-stopped

  milvus-etcd:
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
      - ETCD_LOG_LEVEL=debug
    volumes:
      - etcd_dev_data:/etcd
    restart: unless-stopped

  milvus-minio:
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-dev_minio_access}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-dev_minio_secret}
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    volumes:
      - minio_dev_data:/data
    restart: unless-stopped

  duckdb-manager:
    volumes:
      - duckdb_dev_data:/data/duckdb
      - ./init/duckdb:/init:ro
    restart: unless-stopped

  # Development-specific services
  adminer:
    image: adminer:latest
    container_name: ai-karen-adminer-dev
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - ai-karen-db
    restart: unless-stopped

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: ai-karen-redis-commander-dev
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:redis:6379:0:${REDIS_PASSWORD:-dev_redis_123}
      HTTP_USER: admin
      HTTP_PASSWORD: admin
    depends_on:
      - redis
    networks:
      - ai-karen-db
    restart: unless-stopped

volumes:
  postgres_dev_data:
    driver: local
  elasticsearch_dev_data:
    driver: local
  milvus_dev_data:
    driver: local
  etcd_dev_data:
    driver: local
  minio_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  duckdb_dev_data:
    driver: local

networks:
  ai-karen-db:
    driver: bridge
    name: ai-karen-database-dev-network