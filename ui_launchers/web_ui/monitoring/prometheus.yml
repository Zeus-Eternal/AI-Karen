# Prometheus Configuration for Kari AI Web UI
# Comprehensive metrics collection with custom metric definitions,
# alerting rules, and service discovery

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'kari-ai-production'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - "alert_rules.yml"
  - "recording_rules.yml"

# Scrape configuration
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # Main application metrics
  - job_name: 'kari-web-ui'
    static_configs:
      - targets: ['web-ui:3000']
    scrape_interval: 15s
    metrics_path: /api/metrics
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: web-ui:3000

  # Health check metrics
  - job_name: 'kari-health-checks'
    static_configs:
      - targets: ['web-ui:3000']
    scrape_interval: 30s
    metrics_path: /api/health/metrics
    scrape_timeout: 10s

  # Node Exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s
    relabel_configs:
      - source_labels: [__address__]
        regex: '(.*):(.*)'
        target_label: __address__
        replacement: '${1}:9100'
      - source_labels: [__address__]
        regex: '(.*):(.*)'
        target_label: instance
        replacement: '${1}'

  # cAdvisor for container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 15s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: cadvisor:8080

  # PostgreSQL metrics (if using postgres_exporter)
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    scrape_timeout: 10s

  # Redis metrics (if using redis_exporter)
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    scrape_timeout: 10s

  # Nginx metrics (if using nginx-prometheus-exporter)
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 30s
    scrape_timeout: 10s

  # Custom application metrics
  - job_name: 'kari-custom-metrics'
    static_configs:
      - targets: ['web-ui:3000']
    scrape_interval: 15s
    metrics_path: /api/metrics/custom
    scrape_timeout: 10s
    params:
      module: ['http_2xx']
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: web-ui:3000

  # Error tracking metrics
  - job_name: 'kari-error-metrics'
    static_configs:
      - targets: ['web-ui:3000']
    scrape_interval: 30s
    metrics_path: /api/metrics/errors
    scrape_timeout: 10s

  # Performance metrics
  - job_name: 'kari-performance-metrics'
    static_configs:
      - targets: ['web-ui:3000']
    scrape_interval: 15s
    metrics_path: /api/metrics/performance
    scrape_timeout: 10s

# Remote write configuration (for long-term storage)
remote_write:
  - url: "http://prometheus-remote-storage:9201/write"
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500
    write_relabel_configs:
      - source_labels: [__name__]
        regex: 'go_.*'
        action: drop

# Remote read configuration
remote_read:
  - url: "http://prometheus-remote-storage:9201/read"
    read_recent: true