{
  "python_dependencies": {
    "fastapi": "latest",
    "uvicorn": "latest",
    "pyautogui": "latest",
    "urwid": "latest",
    "prompt_toolkit": "latest",
    "pydantic": "latest",
    "pytest": "latest",
    "transformers": "latest",
    "duckdb": "latest",
    "huggingface_hub": "latest",
    "openai": "latest",
    "requests": "latest",
    "streamlit": "latest",
    "streamlit-autorefresh": "latest",
    "llama-cpp-python": "latest",
    "scikit-learn": "1.5.*",
    "spacy": "3.7.*",
    "datasets": "latest",
    "jinja2": "latest",
    "prometheus_client": "latest",
    "cryptography": "latest",
    "GPUtil": "latest",
    "psutil": "latest",
    "matplotlib": "latest",
    "neo4j": "latest",
    "PyJWT": "latest",
    "markdown": "latest",
    "pytesseract": "latest",
    "fitz": "latest",
    "bs4": "latest",
    "plotly": "latest",
    "seaborn": "latest",
    "redis": "latest",
    "psycopg": "latest",
    "psycopg2-binary": "latest",
    "asyncpg": "latest",
    "sqlalchemy": "latest",
    "alembic": "latest",
    "chardet": "latest",
    "httpx": "latest",
    "tenacity": "latest",
    "pytest-asyncio": "latest"
  },
  "node_dependencies": {
    ".envK/lib/python3.11/site-packages/plotly/labextension": {
      "lodash-es": "^4.17.21",
      "plotly.js": "3.0.1",
      "@lumino/widgets": "~2.4.0",
      "@jupyterlab/builder": "^4.3.6 || ^3.6.8",
      "@types/plotly.js": "^2.33.4",
      "esbuild": "^0.23.1",
      "typescript": "^5.6.2"
    },
    ".envK/share/jupyter/labextensions/jupyterlab-plotly": {
      "lodash-es": "^4.17.21",
      "plotly.js": "3.0.1",
      "@lumino/widgets": "~2.4.0",
      "@jupyterlab/builder": "^4.3.6 || ^3.6.8",
      "@types/plotly.js": "^2.33.4",
      "esbuild": "^0.23.1",
      "typescript": "^5.6.2"
    },
    "ui_launchers/web_ui": {
      "@genkit-ai/googleai": "^1.8.0",
      "@genkit-ai/next": "^1.8.0",
      "@hookform/resolvers": "^4.1.3",
      "@radix-ui/react-accordion": "^1.2.3",
      "@radix-ui/react-alert-dialog": "^1.1.6",
      "@radix-ui/react-avatar": "^1.1.3",
      "@radix-ui/react-checkbox": "^1.1.4",
      "@radix-ui/react-dialog": "^1.1.6",
      "@radix-ui/react-dropdown-menu": "^2.1.6",
      "@radix-ui/react-label": "^2.1.2",
      "@radix-ui/react-menubar": "^1.1.6",
      "@radix-ui/react-popover": "^1.1.6",
      "@radix-ui/react-progress": "^1.1.2",
      "@radix-ui/react-radio-group": "^1.2.3",
      "@radix-ui/react-scroll-area": "^1.2.3",
      "@radix-ui/react-select": "^2.1.6",
      "@radix-ui/react-separator": "^1.1.2",
      "@radix-ui/react-slider": "^1.2.3",
      "@radix-ui/react-slot": "^1.1.2",
      "@radix-ui/react-switch": "^1.1.3",
      "@radix-ui/react-tabs": "^1.1.3",
      "@radix-ui/react-toast": "^1.2.6",
      "@radix-ui/react-tooltip": "^1.1.8",
      "@tanstack-query-firebase/react": "^1.0.5",
      "@tanstack/react-query": "^5.66.0",
      "class-variance-authority": "^0.7.1",
      "clsx": "^2.1.1",
      "date-fns": "^3.6.0",
      "dotenv": "^16.5.0",
      "firebase": "^11.7.3",
      "genkit": "^1.8.0",
      "lucide-react": "^0.475.0",
      "next": "15.2.3",
      "patch-package": "^8.0.0",
      "react": "^18.3.1",
      "react-day-picker": "^8.10.1",
      "react-dom": "^18.3.1",
      "react-hook-form": "^7.54.2",
      "recharts": "^2.15.1",
      "tailwind-merge": "^3.0.1",
      "tailwindcss-animate": "^1.0.7",
      "zod": "^3.24.2",
      "@types/node": "^20",
      "@types/react": "^18",
      "@types/react-dom": "^18",
      "genkit-cli": "^1.8.0",
      "postcss": "^8",
      "tailwindcss": "^3.4.1",
      "typescript": "^5"
    }
  },
  "rust_dependencies": {
    "serde": {
      "version": "1.0",
      "features": [
        "derive"
      ]
    },
    "serde_json": "1.0",
    "log": "0.4",
    "tauri": {
      "version": "2.5.0"
    },
    "tauri-plugin-log": "2.0.0-rc",
    "tauri-plugin-http": "2.0.0",
    "tauri-plugin-shell": "2.0.0"
  },
  "ui_components": [
    "backend",
    "common",
    "desktop_ui",
    "streamlit_ui",
    "web_ui"
  ],
  "database_services": [
    "redis-commander",
    "elasticsearch",
    "milvus",
    "redis",
    "postgres"
  ],
  "api_endpoints": [
    "POST /{conversation_id}/context",
    "POST /prune-expired",
    "GET /ready",
    "GET /services/{service_name}",
    "POST /{memory_id}/confirm",
    "POST /send-notification/{email}",
    "POST /workflows",
    "GET /users/",
    "GET /tenants/{tenant_id}/stats",
    "DELETE /items/{item_id}",
    "POST /tenants/{tenant_id}/conversations",
    "GET /services",
    "POST /process-flow",
    "POST /plugins/reload",
    "GET /announcements",
    "POST /tenants/{tenant_id}/memories/query",
    "POST /chat",
    "POST /tenants/{tenant_id}/memories/bulk",
    "GET /categories",
    "GET /{tool_name}",
    "POST /{conversation_id}/messages",
    "GET /tenants/{tenant_id}/analytics",
    "GET /api/services/{service_name}/health",
    "GET /{conversation_id}",
    "GET /users/me/items/",
    "POST /token",
    "DELETE /{conversation_id}",
    "POST /{tool_name}/execute",
    "GET /users/me",
    "POST /uploadfile/",
    "GET /workflows",
    "POST /search",
    "GET /api/config",
    "POST /{plugin_name}/disable",
    "GET /tenants/{tenant_id}/users/{user_id}/conversations",
    "PUT /{conversation_id}/ai-insights",
    "POST /extensions/{extension_name}/unload",
    "GET /ping",
    "GET /tenants/{tenant_id}",
    "POST /{plugin_name}/execute",
    "GET /tools/discover",
    "POST /plugins/{intent}/disable",
    "GET /hello",
    "POST /decide-action",
    "GET /plugins/{intent}",
    "POST /{plugin_name}/validate",
    "POST /extensions/{extension_name}/reload",
    "POST /workflows/{workflow_id}/execute",
    "PUT /{conversation_id}",
    "GET /metrics",
    "GET /livez",
    "POST /reload",
    "GET /health",
    "POST /achat",
    "GET /flows",
    "POST /files/",
    "POST /tenants/{tenant_id}/memories",
    "POST /self_refactor/approve",
    "POST /query",
    "GET /metrics/prometheus",
    "GET /stats",
    "PUT /{memory_id}/importance",
    "POST /maintenance",
    "GET /",
    "POST /api/health/check",
    "GET /extensions/discover",
    "POST /tenants",
    "POST /plugins/{intent}/enable",
    "GET /plugins",
    "POST /context",
    "PUT /items/{item_id}",
    "POST /items/",
    "GET /me",
    "PUT /{conversation_id}/ui-context",
    "POST /tenants/{tenant_id}/conversations/{conversation_id}/messages",
    "POST /embedding",
    "GET /status",
    "GET /api/health/summary",
    "DELETE /{memory_id}",
    "GET /extensions",
    "GET /items/",
    "POST /login",
    "GET /{tool_name}/schema",
    "GET /info",
    "POST /conversation-processing",
    "POST /{conversation_id}/tags",
    "GET /{plugin_name}",
    "GET /tenants/{tenant_id}/conversations/{conversation_id}",
    "POST /models/select",
    "GET /users/{user_id}/profile",
    "POST /register",
    "POST /create",
    "GET /models",
    "GET /readyz",
    "GET /extensions/{extension_name}",
    "POST /cleanup-inactive",
    "GET /analytics",
    "GET /items/{item_id}",
    "GET /api/services",
    "PATCH /items/",
    "POST /{plugin_name}/enable",
    "GET /extensions/registry/summary",
    "POST /extensions/{extension_name}/load",
    "POST /switch",
    "GET /self_refactor/logs",
    "POST /store"
  ],
  "plugin_structure": {
    "plugin_directories": [
      "src/ai_karen_engine/plugins",
      "plugin_marketplace"
    ],
    "example_plugins": [],
    "plugin_manifests": [
      {
        "path": "src/ai_karen_engine/plugins/hello_world",
        "name": "hello_world",
        "description": ""
      },
      {
        "path": "src/ai_karen_engine/plugins/llm_manager",
        "name": "llm_manager",
        "description": ""
      },
      {
        "path": "src/ai_karen_engine/plugins/sandbox_fail",
        "name": "sandbox_fail",
        "description": ""
      },
      {
        "path": "src/ai_karen_engine/plugins/time_query",
        "name": "time_query",
        "description": ""
      },
      {
        "path": "src/ai_karen_engine/plugins/tui_fallback",
        "name": "tui_fallback",
        "description": ""
      },
      {
        "path": "src/ai_karen_engine/plugins/llm_services/deepseek",
        "name": "deepseek",
        "description": ""
      },
      {
        "path": "src/ai_karen_engine/plugins/llm_services/gemini",
        "name": "gemini",
        "description": ""
      },
      {
        "path": "src/ai_karen_engine/plugins/llm_services/llama",
        "name": "LlamaCppLocal",
        "description": "Pure in-process LLM using llama-cpp-python. No REST, no server. Hot-reload, async, and streaming."
      },
      {
        "path": "src/ai_karen_engine/plugins/llm_services/openai",
        "name": "openai",
        "description": ""
      },
      {
        "path": "plugin_marketplace/ai/fine-tune-lnm",
        "name": "fine-tune-lnm",
        "description": ""
      },
      {
        "path": "plugin_marketplace/ai/hf-llm",
        "name": "hf-llm",
        "description": ""
      },
      {
        "path": "plugin_marketplace/ai/llm-services/deepseek",
        "name": "deepseek",
        "description": ""
      },
      {
        "path": "plugin_marketplace/ai/llm-services/gemini",
        "name": "gemini",
        "description": ""
      },
      {
        "path": "plugin_marketplace/ai/llm-services/llama",
        "name": "LlamaCppLocal",
        "description": "Pure in-process LLM using llama-cpp-python. No REST, no server. Hot-reload, async, and streaming."
      },
      {
        "path": "plugin_marketplace/ai/llm-services/openai",
        "name": "openai",
        "description": ""
      },
      {
        "path": "plugin_marketplace/automation/autonomous-task-handler",
        "name": "autonomous-task-handler",
        "description": ""
      },
      {
        "path": "plugin_marketplace/automation/git-merge-safe",
        "name": "git-merge-safe",
        "description": ""
      },
      {
        "path": "plugin_marketplace/core/time-query",
        "name": "time-query",
        "description": ""
      },
      {
        "path": "plugin_marketplace/core/tui-fallback",
        "name": "tui-fallback",
        "description": ""
      },
      {
        "path": "plugin_marketplace/examples/hello-world",
        "name": "hello-world",
        "description": ""
      },
      {
        "path": "plugin_marketplace/examples/sandbox-fail",
        "name": "sandbox-fail",
        "description": ""
      },
      {
        "path": "plugin_marketplace/integrations/desktop-agent",
        "name": "desktop-agent",
        "description": ""
      },
      {
        "path": "plugin_marketplace/integrations/k8s-scale",
        "name": "k8s-scale",
        "description": ""
      },
      {
        "path": "plugin_marketplace/integrations/llm-manager",
        "name": "llm-manager",
        "description": ""
      }
    ]
  },
  "extension_structure": {
    "extension_directories": [
      "extensions"
    ],
    "extension_manifests": [
      {
        "path": "extensions/analytics/dashboard",
        "name": "analytics-dashboard",
        "description": "Comprehensive analytics and reporting dashboard with real-time metrics"
      },
      {
        "path": "extensions/automation/workflow-builder",
        "name": "workflow-builder",
        "description": "AI-powered workflow automation builder - the foundation for prompt-driven automation"
      },
      {
        "path": "extensions/examples/hello-extension",
        "name": "hello-extension",
        "description": "A simple example extension that demonstrates the extension system"
      }
    ]
  },
  "docker_services": [
    "backup-scheduler",
    "elasticsearch",
    "redis-commander",
    "milvus",
    "duckdb-manager",
    "milvus-etcd",
    "db-init",
    "adminer",
    "redis",
    "api",
    "milvus-minio",
    "postgres"
  ],
  "architecture_components": [
    "ai_karen.egg-info",
    "ai_karen_engine",
    "cachetools",
    "charts",
    "ui_logic",
    "__pycache__",
    "ui_launchers",
    "extensions",
    "plugin_marketplace",
    "docker",
    "scripts"
  ]
}