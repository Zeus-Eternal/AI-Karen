version: '3.8'

services:
  # =========================
  # Ollama LLM Service
  # =========================
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434"]
      interval: 30s
      timeout: 5s
      retries: 5

  # =========================
  # API / FastAPI Backend
  # =========================
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: karen_user
      POSTGRES_PASSWORD: karen_secure_pass_change_me
      POSTGRES_DB: ai_karen
      POSTGRES_URL: postgresql://karen_user:karen_secure_pass_change_me@postgres:5432/ai_karen

      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PORT: 9200
      ELASTICSEARCH_USER: elastic
      ELASTICSEARCH_PASSWORD: elastic_secure_pass_change_me
      ELASTICSEARCH_URL: http://elasticsearch:9200

      MILVUS_HOST: milvus
      MILVUS_PORT: 19530
      MILVUS_USER: milvus_user
      MILVUS_PASSWORD: milvus_secure_pass_change_me
      MILVUS_URL: milvus:19530

      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis_secure_pass_change_me
      REDIS_URL: redis://:redis_secure_pass_change_me@redis:6379/0

      MINIO_ACCESS_KEY: minioadmin_change_me
      MINIO_SECRET_KEY: minioadmin_secret_change_me
      MINIO_HOST: milvus-minio
      MINIO_PORT: 9000
      MINIO_CONSOLE_PORT: 9001

      ENVIRONMENT: development
      DEV_MODE: "true"
      DEBUG_LOGGING: "true"
      ENABLE_MILVUS: "true"
      ENABLE_REDIS: "true"
      ENABLE_ELASTICSEARCH: "true"
      ENABLE_MONITORING: "true"
      ENABLE_BACKUPS: "true"
      OLLAMA_HOST: ollama
      OLLAMA_PORT: 11434
      OLLAMA_URL: http://ollama:11434
    depends_on:
      - postgres
      - redis
      - elasticsearch
      - milvus
      - ollama

  # =========================
  # PostgreSQL
  # =========================
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: karen_user
      POSTGRES_PASSWORD: karen_secure_pass_change_me
      POSTGRES_DB: ai_karen
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U karen_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  # =========================
  # Elasticsearch
  # =========================
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=elastic_secure_pass_change_me
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # =========================
  # Redis
  # =========================
  redis:
    image: redis:7-alpine
    command: ["redis-server", "--requirepass", "redis_secure_pass_change_me"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis_secure_pass_change_me", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # =========================
  # Milvus Dependencies
  # =========================
  milvus-etcd:
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    command: etcd -advertise-client-urls=http://0.0.0.0:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    volumes:
      - etcd_data:/etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  milvus-minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ROOT_USER: minioadmin_change_me
      MINIO_ROOT_PASSWORD: minioadmin_secret_change_me
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: minio server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  milvus:
    image: milvusdb/milvus:v2.3.2
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: milvus-etcd:2379
      MINIO_ADDRESS: milvus-minio:9000
      MINIO_ACCESS_KEY_ID: minioadmin_change_me
      MINIO_SECRET_ACCESS_KEY: minioadmin_secret_change_me
    ports:
      - "19530:19530"
    volumes:
      - milvus_data:/var/lib/milvus
    depends_on:
      - milvus-etcd
      - milvus-minio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      timeout: 20s
      retries: 5

volumes:
  postgres_data:
  es_data:
  redis_data:
  milvus_data:
  etcd_data:
  minio_data:
  ollama_data:
