# Model Orchestrator Logging Configuration
# Integrates with existing Kari logging infrastructure

logging:
  version: 1
  disable_existing_loggers: false
  
  formatters:
    structured:
      format: '{"timestamp": "%(asctime)s", "level": "%(levelname)s", "logger": "%(name)s", "message": "%(message)s", "component": "model_orchestrator", "correlation_id": "%(correlation_id)s", "user_id": "%(user_id)s", "model_id": "%(model_id)s", "operation": "%(operation)s"}'
      datefmt: '%Y-%m-%dT%H:%M:%S.%fZ'
    
    simple:
      format: '[%(asctime)s] %(levelname)s [%(name)s] %(message)s'
      datefmt: '%Y-%m-%d %H:%M:%S'
  
  handlers:
    console:
      class: logging.StreamHandler
      level: INFO
      formatter: structured
      stream: ext://sys.stdout
    
    file:
      class: logging.handlers.RotatingFileHandler
      level: DEBUG
      formatter: structured
      filename: /app/logs/model_orchestrator.log
      maxBytes: 10485760  # 10MB
      backupCount: 5
      encoding: utf8
    
    audit:
      class: logging.handlers.RotatingFileHandler
      level: INFO
      formatter: structured
      filename: /app/logs/model_orchestrator_audit.log
      maxBytes: 10485760  # 10MB
      backupCount: 10
      encoding: utf8
    
    error:
      class: logging.handlers.RotatingFileHandler
      level: ERROR
      formatter: structured
      filename: /app/logs/model_orchestrator_errors.log
      maxBytes: 10485760  # 10MB
      backupCount: 5
      encoding: utf8
    
    # Integration with existing log aggregation
    syslog:
      class: logging.handlers.SysLogHandler
      level: INFO
      formatter: structured
      address: ['localhost', 514]
      facility: 'local0'
    
    # For centralized logging (if available)
    elasticsearch:
      class: logging_elasticsearch.ElasticsearchHandler
      level: INFO
      formatter: structured
      hosts: ['elasticsearch:9200']
      index: 'model-orchestrator-logs'
      doc_type: 'log'
      timeout: 10
      max_retries: 3
  
  loggers:
    # Model Orchestrator Core
    ai_karen_engine.services.model_orchestrator:
      level: DEBUG
      handlers: [console, file, audit]
      propagate: false
    
    # Model Registry
    ai_karen_engine.services.model_registry:
      level: DEBUG
      handlers: [console, file, audit]
      propagate: false
    
    # Model Security
    ai_karen_engine.security.model_security:
      level: INFO
      handlers: [console, file, audit]
      propagate: false
    
    # Model Operations
    ai_karen_engine.operations.model_operations:
      level: INFO
      handlers: [console, file]
      propagate: false
    
    # Plugin Service
    plugin_marketplace.ai.model-orchestrator.service:
      level: DEBUG
      handlers: [console, file]
      propagate: false
    
    # API Routes
    ai_karen_engine.api_routes.model_orchestrator_routes:
      level: INFO
      handlers: [console, file]
      propagate: false
    
    # Health Monitoring
    ai_karen_engine.health.model_orchestrator_health:
      level: INFO
      handlers: [console, file]
      propagate: false
    
    # Metrics and Monitoring
    ai_karen_engine.monitoring.model_orchestrator_metrics:
      level: INFO
      handlers: [console, file]
      propagate: false
    
    # Error Tracking
    ai_karen_engine.error_tracking.model_orchestrator_errors:
      level: ERROR
      handlers: [console, error, audit]
      propagate: false
    
    # Audit Logging
    ai_karen_engine.audit.model_orchestrator_audit:
      level: INFO
      handlers: [audit, syslog]
      propagate: false
  
  # Root logger configuration
  root:
    level: INFO
    handlers: [console]

# Log aggregation configuration
aggregation:
  enabled: true
  
  # Structured logging fields
  fields:
    component: "model_orchestrator"
    service: "kari-ai"
    environment: "${ENVIRONMENT:-development}"
    version: "${VERSION:-1.0.0}"
  
  # Log correlation
  correlation:
    enabled: true
    header_name: "X-Correlation-ID"
    generate_if_missing: true
  
  # Log sampling (for high-volume logs)
  sampling:
    enabled: true
    rate: 0.1  # Sample 10% of debug logs
    levels: ["DEBUG"]
  
  # Log filtering
  filters:
    - name: "sensitive_data"
      pattern: "(api_key|password|token|secret)"
      replacement: "[REDACTED]"
    - name: "pii_data"
      pattern: "(email|phone|ssn)"
      replacement: "[PII_REDACTED]"

# Audit logging configuration
audit:
  enabled: true
  
  # Events to audit
  events:
    - model_download
    - model_remove
    - model_migrate
    - model_gc
    - registry_write
    - license_accept
    - permission_denied
    - security_violation
  
  # Audit fields
  fields:
    - timestamp
    - user_id
    - session_id
    - correlation_id
    - event_type
    - resource_id
    - action
    - result
    - ip_address
    - user_agent
    - metadata
  
  # Retention policy
  retention:
    days: 365
    archive_after_days: 90
    compression: true
  
  # Compliance
  compliance:
    gdpr: true
    hipaa: false
    sox: true
    pci: false

# Performance monitoring
performance:
  enabled: true
  
  # Slow operation logging
  slow_operations:
    enabled: true
    threshold_seconds: 10
    include_stack_trace: true
  
  # Memory usage logging
  memory_monitoring:
    enabled: true
    interval_seconds: 300  # 5 minutes
    threshold_mb: 1000
  
  # Disk usage logging
  disk_monitoring:
    enabled: true
    interval_seconds: 600  # 10 minutes
    threshold_percent: 80

# Error tracking integration
error_tracking:
  enabled: true
  
  # Sentry integration (if available)
  sentry:
    enabled: false
    dsn: "${SENTRY_DSN:-}"
    environment: "${ENVIRONMENT:-development}"
    release: "${VERSION:-1.0.0}"
  
  # Custom error tracking
  custom:
    enabled: true
    endpoint: "/api/errors"
    batch_size: 10
    flush_interval_seconds: 60